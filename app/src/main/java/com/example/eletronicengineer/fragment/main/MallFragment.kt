package com.example.eletronicengineer.fragment.mainimport android.content.Contextimport android.content.Intentimport android.content.SyncStatusObserverimport android.os.Bundleimport android.os.Handlerimport android.os.Messageimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.*import androidx.fragment.app.Fragmentimport androidx.fragment.app.FragmentManagerimport androidx.fragment.app.FragmentPagerAdapterimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport androidx.viewpager.widget.PagerAdapterimport androidx.viewpager.widget.ViewPagerimport com.bumptech.glide.Glideimport com.example.eletronicengineer.Rimport com.example.eletronicengineer.activity.MainActivityimport com.example.eletronicengineer.activity.PersonInformationActivityimport com.example.eletronicengineer.activity.SearchActivityimport com.example.eletronicengineer.activity.ShoppingActivityimport com.example.eletronicengineer.adapter.StoreTypeAdapterimport com.example.eletronicengineer.aninterface.StoresNameimport com.example.eletronicengineer.fragment.shoppingmall.NewGoodsFragmentimport com.example.eletronicengineer.fragment.shoppingmall.PersonInformationFragmentimport com.example.eletronicengineer.fragment.shoppingmall.PopularityGoodsFragmentimport com.example.eletronicengineer.fragment.shoppingmall.RecommendGoodsFragmentimport com.example.eletronicengineer.utils.GlideLoaderimport kotlinx.android.synthetic.main.mall.view.*import java.lang.ref.WeakReferenceclass MallFragment:Fragment(){    companion object{        //声明集合        lateinit var mViewList:ArrayList<View>        lateinit var txtPoints:ArrayList<TextView>    }    lateinit var mActivity: MainActivity    var mStoresList = ArrayList<StoresName>()    override fun onAttach(context: Context?) {        super.onAttach(context)        mActivity = (activity as MainActivity?)!!    }    lateinit var mView:View    lateinit var view1: View    lateinit var view2: View    lateinit var view3: View    lateinit var view4: View    lateinit var view5: View    lateinit var viewPager:ViewPager    lateinit var mLinearLayout:LinearLayout    var inputMultiSelectModel = ""    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {        mView  = inflater.inflate(R.layout.mall,container,false)        viewPager = mView.vp_mall_banner        mLinearLayout = mView.ll_mall_point_bg        //初始化view里面的控件        initView()        initCircle()        return mView    }    private fun initCircle() {        txtPoints = ArrayList()        for (j in mViewList){            val txt = TextView(context)            txt.setBackgroundResource(R.drawable.point_bg)            if(j==mViewList[0]) txt.isEnabled = true            else txt.isEnabled = false            val layoutParams = LinearLayout.LayoutParams(30,30)            layoutParams.setMargins(7,7,7,7)            txt.layoutParams = layoutParams            txtPoints.add(txt)            mLinearLayout.addView(txt)        }    }    private fun initView() {        mView.tv_mall_more.setOnClickListener {            val intent = Intent(this.activity,ShoppingActivity::class.java)            intent.putExtra("type",1)            startActivity(intent)        }        mView.tv_mall_search_bg.setOnClickListener {            val intent = Intent(this.activity,SearchActivity::class.java)            startActivity(intent)        }        mView.tv_mall_person.setOnClickListener {            val intent = Intent(this.activity,PersonInformationActivity::class.java)            startActivity(intent)        }        val mTitle = arrayListOf("人气商品","新品商品","推荐商品")        val mFragment = arrayListOf(PopularityGoodsFragment(),NewGoodsFragment(),RecommendGoodsFragment())        mView.viewpager_mall.offscreenPageLimit = mFragment.size        mView.viewpager_mall.adapter = viewPagerAdapter((activity as MainActivity).supportFragmentManager, mFragment, mTitle)        mView.mTabLayout_mall.setupWithViewPager(mView.viewpager_mall)        mViewList = ArrayList()        val mPic = arrayListOf("https://b2.bmp.ovh/imgs/2019/08/9ac3322eff796934.jpg","https://b2.bmp.ovh/imgs/2019/08/848fc45c66a36796.jpeg","https://b2.bmp.ovh/imgs/2019/08/73fb7b086cca4e21.jpg","https://b2.bmp.ovh/imgs/2019/08/8b590598bb8b9bf3.png","https://b2.bmp.ovh/imgs/2019/08/f36fe9bd4954775c.jpg")        for (j in mPic){            val imageView = ImageView(context)            GlideLoader().loadPreImage(imageView,j)            mViewList.add(imageView)        }        //设置滑动监听        viewPager.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {            override fun onPageScrolled(i: Int, v: Float, i1: Int) {            }            override fun onPageSelected(i: Int) {                var newPosition = i % mViewList.size                if(newPosition<0){                    newPosition += mViewList.size                }                changePoints(newPosition)            }            override fun onPageScrollStateChanged(i: Int) {            }        })        viewPager.setCurrentItem(Integer.MAX_VALUE/2)        //设置适配器        viewPager.adapter = BannerAdapter()    }    fun changePoints(position:Int){        for (j in 0 until txtPoints.size){            if(position==j) txtPoints[j].isEnabled=true            else txtPoints[j].isEnabled=false        }    }    //这里的mViewList不能识别，下午做成全局变量，在单例模式    private class BannerAdapter : PagerAdapter() {        val mNum = 0        override fun getCount(): Int {            return Integer.MAX_VALUE        }        override fun isViewFromObject(view: View, o: Any): Boolean {            return view === o        }        //增加        override fun instantiateItem( container: ViewGroup, position: Int): Any {            var newPosition = position % mViewList.size            if(newPosition<0){                newPosition += mViewList.size            }            val mView = mViewList[newPosition]            val vp = mView.parent            if(vp!=null){                (vp as ViewGroup).removeView(mView)            }            container.addView(mView)            return mView        }        //删除        override fun destroyItem(container: ViewGroup, position: Int, `object`: Any) {        }    }    class viewPagerAdapter(fm: FragmentManager?, var mList:ArrayList<Fragment>, var mTitle:ArrayList<String>):        FragmentPagerAdapter(fm){        override fun getItem(position: Int): Fragment {            return mList[position]        }        override fun getCount(): Int {            return mList.size        }        override fun getPageTitle(position: Int): CharSequence? {            return mTitle[position]        }    }}