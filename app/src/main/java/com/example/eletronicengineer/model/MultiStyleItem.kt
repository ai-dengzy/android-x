package com.electric.engineering.modelimport android.view.Viewimport com.amap.api.location.AMapLocationListenerimport com.example.eletronicengineer.adapter.RecyclerviewAdapterimport java.io.Serializableclass MultiStyleItem:Serializable {    enum class Options {        TITLE, MULTI_BUTTON, MULTI_RADIO_BUTTON, MULTI_CHECKBOX, MULTI_HYBRID, SELECT_DIALOG, TWO_OPTIONS_SELECT_DIALOG,        THREE_OPTIONS_SELECT_DIALOG, SINGLE_INPUT, INPUT_RANGE, TWO_PAIR_INPUT, INPUT_WITH_UNIT, INPUT_WITH_MULTI_UNIT,        INPUT_WITH_TEXTAREA, SHIFT_INPUT, HINT, SUBMIT, EXPAND, SINGLE_DISPLAY_RIGHT,        FIVE_DISPLAY, TWO_COLUMN_DISPLAY, EXPAND_LIST, SINGLE_DISPLAY_LEFT,TWO_DISPLAY,FOUR_DISPLAY, BLANK,EXPAND_MENU,        //添加滑动        TEXT_SCOLLVIEW,        //右扩展        EXPAND_RIGHT,        //两个Dialog        TWO_TEXT_DIALOG,        // alterPosition time:2019/7/15        // function:公共点定位        POSITION_ADD, POSITION_DELETE,        // alterPosition time:2019/7/15        // function:新建项目盘        TITLE_INPUT_BG,//标题+带边框的输入框        TITLE_INPUT_BG_SELECT,//标题+输入框+选择        // alterPosition time:2019/7/15        // function: //扩展+选择        TEXT_EXPAND_SELECT,        // alterPosition time:2019/7/22        // function:公共点定位，起始与终点合并成一个布局        POSITION_START_END,        //定位距离        DISTANCE_POSITION,        GOODS,        STORE,        DEMAND_ITEM,        REGISTRATION_ITEM    }    var itemPosition = 0    var options = Options.TITLE    lateinit var key: String    lateinit var additionalKey:String    lateinit var sendFormat:String    var necessary: Boolean = false    lateinit var expandMenuTitle:String    lateinit var expandMenuList:List<String>    lateinit var expandMenuListListener:List<View.OnClickListener>    lateinit var title1: String    lateinit var styleType:String    var backListener: View.OnClickListener? = null    var tvSelect: View.OnClickListener? = null    //wheelView    lateinit var selectTitle: String    lateinit var selectOption1Items: List<String>    lateinit var selectOption2Items: List<List<String>>    lateinit var selectOption3Items: List<List<List<String>>>    var selectContent: String = ""    var selectListener: View.OnClickListener? = null    //multi button    lateinit var buttonTitle: String    lateinit var buttonName: List<String>    lateinit var buttonListener: List<View.OnClickListener>    var buttonCheckList:MutableList<Boolean> =ArrayList()    //input with unit    lateinit var inputUnitTitle: String    lateinit var inputUnit: String    var inputUnitContent: String = ""    //two pair input    lateinit var twoPairInputTitle: String    lateinit var twoPairInputItem1: String    lateinit var twoPairInputItem2: String    lateinit var twoPairInputItem3: String    var twoPairInputValue1: String = ""    var twoPairInputValue2: String = ""    //input with multi unit    lateinit var inputMultiUnitTitle: String    lateinit var inputMultiUnit: List<String>    var inputMultiContent: String = ""    var inputMultiSelectUnit: String = ""    var inputMultiAbandonInput:String="面议"    //single input    lateinit var inputSingleTitle: String    var inputSingleContent: String = ""    var inputSingleHint: String = ""    //input range    lateinit var inputRangeTitle: String    lateinit var inputRangeUnit: String    var inputRangeValue1: String = ""    var inputRangeValue2: String = ""    //multi radiobutton    lateinit var radioButtonTitle: String    lateinit var radioButtonName: List<String>    var radioButtonValue: String = ""    //multi checkbox    lateinit var checkboxNameList: List<String>    lateinit var checkboxTitle: String    var checkboxValueList: MutableList<Boolean> =ArrayList()    //input with textarea    lateinit var textAreaTitle: String    var textAreaContent: String = ""    //hint    lateinit var hintContent: String    var customFontColor: String? = null    var startPosition: Int? = null    var endPosition: Int? = null    /*    object customTheme{        var custormFontColor:String?=null        var startPosition:Int?=null        var endPosition:Int?=null    }    var customThemeList:List<customTheme> =ArrayList()*/    //three display    lateinit var fourDisplayTitle: String    lateinit var fourDisplayContent1: String    lateinit var fourDisplayContent2: String    lateinit var fourDisplayContent3: String    var fourDisplayListener: View.OnClickListener = View.OnClickListener {}    //four display    lateinit var fiveDisplayTitle: String    lateinit var fiveDisplayContent1: String    lateinit var fiveDisplayContent2: String    lateinit var fiveDisplayContent3: String    lateinit var fiveDisplayContent4:String    var fiveDisplayListener: View.OnClickListener = View.OnClickListener {}    //two column display    lateinit var twoColumnDisplayTitle1: String    lateinit var twoColumnDisplayContent1: String    lateinit var twoColumnDisplayTitle2: String    lateinit var twoColumnDisplayContent2: String    //expand list 可展开的列表    lateinit var expandListTitle: String    lateinit var expandListAdapter: RecyclerviewAdapter    lateinit var expandListPath: String//增加一个字段用于存储嵌套函数里的json文件的路径    //expand list display    lateinit var singleDisplayLeftTitle: String    lateinit var singleDisplayLeftContent: String    var singleDisplayLeftListener:View.OnClickListener=View.OnClickListener {  }    //two display    lateinit var twoDisplayTitle: String    lateinit var twoDisplayContent1: String    lateinit var twoDisplayContent2: String/////增加了一个字段用于显示备注    var twoDisplayListener: View.OnClickListener= View.OnClickListener {}//增加一个监听用于处理备注里的上传照片    //submit    lateinit var submitContent: String    var submitListener: View.OnClickListener? = null    //multi hybrid contain button radiobutton    lateinit var hybridTitle: String    lateinit var hybridButtonName: List<String>    lateinit var hybridRadioButtonName: List<String>    lateinit var hybridCheckBoxName: List<String>    lateinit var hybridButtonListeners: List<View.OnClickListener>    lateinit var hybridRadioButtonValueList: List<String>    lateinit var hybridCheckBoxValueList: List<String>    //expand 可展开的子项    lateinit var expandTitle: String    lateinit var expandContent: String    //扩展+选择    var tvExpandTitleListener:View.OnClickListener?=null    var tvExpandMoreListener:View.OnClickListener?=null    //shiftInput 跳转到新界面去输入    lateinit var shiftInputTitle: String    var shiftInputContent = ""    var shiftInputPicture=""    val data:String=""    var jumpListener: View.OnClickListener? = null    //single display    lateinit var singleDisplayRightTitle: String    var singleDisplayRightContent: String = ""    //TWO_TEXT_DIALOG业主单位    lateinit var textFirstDialog:String    lateinit var selectFirstDialogOption1Items:List<String>    lateinit var textSecondDialog:String    lateinit var selectSecondDialogOption1Items:List<String>    //text scollview滑动    lateinit var textDetails:String    lateinit var textMore:String    lateinit var textDelete:String    // function:公共定位点    //仓库定位    lateinit var positionTitle:String    var positionSubitemsNumber = 0    var positionNodeNumber = 0    var positionSubitemsRow = ArrayList<Int>()    var positionAdd=View.OnClickListener{}    //1号仓库    var positionDelect:View.OnClickListener?=null    lateinit var inputPositionTitle:String    var inputPositionContent:String =""    // function:公共点定位，起始与终点合并成一个布局    lateinit var inputPositionTransportTitle:String    var inputPositionLatitude:Double = 0.0    var inputPositionLongitude:Double = 0.0    var inputPositionContentStart=""    var inputPositionContentEnd=""    var positionStartListener:View.OnClickListener?=null    var positionEndListener:View.OnClickListener?=null    var positionListener:View.OnClickListener?=null    //var aMapLocationListener:AMapLocationListener=AMapLocationListener{}    // function:新建项目盘    //项目盘带边框单输入框    lateinit var inputSingleTitleWithBg:String    //项目盘带边框单输入框+选择    lateinit var inputSingleTitleWithBgSelect:String    lateinit var inputDistancePositionTitle:String    var inputDistancePositionContent:String=""    lateinit var inputDistancePositionUnit:String    lateinit var goodsPicture:String    lateinit var goodsName:String    lateinit var goodsprice:String    lateinit var storeName:String    lateinit var storeImage:String    lateinit var storeAddress:String    lateinit var storeMajor:String    lateinit var demandItemTitle:String    lateinit var demandItemProjectMode:String    lateinit var demandItemProjectAddress:String    lateinit var demandItemProjectMore:String    var itemListener:View.OnClickListener?=null    lateinit var registrationItemType:String    lateinit var registrationItemNumber:String    lateinit var registrationItemInformation1:String    lateinit var registrationItemInformation2:String    var deleteListener:View.OnClickListener?=null    constructor(options: Options, title1: String, title2: String) {        this.options = options        when (options) {            Options.TITLE -> {                this.title1 = title1                this.styleType = title2            }            Options.INPUT_WITH_UNIT -> {                this.inputUnitTitle = title1                this.inputUnit = title2            }            Options.SINGLE_DISPLAY_RIGHT -> {                this.singleDisplayRightTitle = title1                this.singleDisplayRightContent = title2            }            Options.SINGLE_DISPLAY_LEFT -> {                this.singleDisplayLeftTitle = title1                this.singleDisplayLeftContent = title2            }            Options.INPUT_RANGE -> {                this.inputRangeTitle = title1                this.inputRangeUnit = title2            }            Options.EXPAND -> {                this.expandTitle = title1                this.expandContent = title2            }            Options.SHIFT_INPUT->{                this.shiftInputTitle=title1                this.shiftInputContent=title2            }            Options.EXPAND_RIGHT->            {                this.expandTitle=title1                this.expandContent=title2            }            // alterPosition time:2019/7/15            // function:项目盘 输入框+选择            Options.TEXT_EXPAND_SELECT-> {                this.expandTitle = title1                this.expandContent = title2            }            Options.SINGLE_INPUT->{                this.inputSingleTitle = title1                this.inputSingleContent = title2            }        }    }    constructor(options: Options, title: String, styleType:String, adapter: RecyclerviewAdapter) {        this.options = options        when (options) {            Options.EXPAND_LIST -> {                this.expandListTitle = title                this.expandListAdapter = adapter                this.styleType = styleType            }        }    }    constructor(        options: Options,        twoDisplayTitle: String,        twoDisplayItem1: String,        twoDisplayItem2: String    ){        this.options = options        when (options) {            Options.TWO_DISPLAY -> {                this.twoDisplayTitle = twoDisplayTitle                this.twoDisplayContent1 = twoDisplayItem1                this.twoDisplayContent2 = twoDisplayItem2            }            Options.GOODS->{                this.goodsName=twoDisplayTitle                this.goodsprice=twoDisplayItem1                this.goodsPicture=twoDisplayItem2            }            Options.SHIFT_INPUT->{                this.shiftInputTitle=twoDisplayTitle                this.shiftInputContent=twoDisplayItem1                this.shiftInputPicture=twoDisplayItem2            }        }    }    constructor(        options: Options,        selectOption1Items: List<String>,        selectOption2Items: List<List<String>>,        selectOption3Items: List<List<List<String>>>,        selectTitle: String    ) {        this.options = options        when (options) {            Options.TWO_OPTIONS_SELECT_DIALOG -> {                this.selectOption1Items = selectOption1Items                this.selectOption2Items = selectOption2Items                this.selectTitle = selectTitle            }            Options.THREE_OPTIONS_SELECT_DIALOG -> {                this.selectOption1Items = selectOption1Items                this.selectOption2Items = selectOption2Items                this.selectOption3Items = selectOption3Items                this.selectTitle = selectTitle            }        }    }    constructor(options: Options, selectNameList: List<String>, selectTitle: String) {        this.options = options        when (options) {            Options.SELECT_DIALOG -> {                this.selectOption1Items = selectNameList                this.selectTitle = selectTitle            }            Options.MULTI_CHECKBOX -> {                this.checkboxNameList = selectNameList                this.checkboxTitle = selectTitle            }            Options.MULTI_RADIO_BUTTON -> {                this.radioButtonName = selectNameList                this.radioButtonTitle = selectTitle            }            Options.INPUT_WITH_MULTI_UNIT -> {                this.inputMultiUnitTitle = selectTitle                this.inputMultiUnit = selectNameList            }            Options.EXPAND_MENU->{                this.expandMenuTitle=selectTitle                this.expandMenuList=selectNameList            }        }    }    constructor(        options: Options,        buttonTitle: String,        buttonName: List<String>,        buttonListener: List<View.OnClickListener>    ) {        this.options = options        this.buttonTitle = buttonTitle        this.buttonName = buttonName        this.buttonListener = buttonListener    }    constructor(options: Options, inputSingleTitle: String) {        this.options = options        when (options) {            Options.TITLE -> {                this.title1 = inputSingleTitle            }            Options.HINT -> {                this.hintContent = inputSingleTitle            }            Options.SUBMIT -> {                this.submitContent = inputSingleTitle            }            Options.SINGLE_INPUT -> {                this.inputSingleTitle = inputSingleTitle            }            Options.BLANK->{            }            // alterPosition time:2019/7/15            // function:公共点定位 添加            Options.POSITION_ADD->            {                this.positionTitle = inputSingleTitle            }            // alterPosition time:2019/7/22            // function:公共点运输，起点与终点合并            Options.POSITION_START_END ->{                this.inputPositionTransportTitle = inputSingleTitle            }                // alterPosition time:2019/7/15            // function: //新建项目盘中，标题+带边框的输入框            Options.TITLE_INPUT_BG->            {                this.inputSingleTitleWithBg = inputSingleTitle            }            // alterPosition time:2019/7/15            // function: //新建项目盘中，标题+带边框的输入框            Options.TITLE_INPUT_BG_SELECT->            {                this.inputSingleTitleWithBgSelect = inputSingleTitle            }        }    }    constructor(options: Options, inputSingleTitle: String, necessary: Boolean) {        this.options = options        when (options) {            Options.SHIFT_INPUT -> {                this.necessary = necessary                this.shiftInputTitle = inputSingleTitle            }            Options.POSITION_DELETE->{                this.necessary=necessary                this.inputPositionTitle=inputSingleTitle            }        }    }    constructor(options: Options, inputSingleTitle: String,inputSingleUnit: String, necessary: Boolean){        this.options=options        when(options){            Options.DISTANCE_POSITION->{                this.inputDistancePositionTitle=inputSingleTitle                this.inputDistancePositionUnit=inputSingleUnit                this.necessary=necessary            }            Options.INPUT_WITH_TEXTAREA->{                this.textAreaTitle=inputSingleTitle                this.textAreaContent=inputSingleUnit                this.necessary=necessary            }        }    }    constructor() {    }    constructor(        options: Options,        hybridTitle: String,        hybridButtonName: List<String>,        hybridRadioButtonName: List<String>,        hybridCheckBoxName: List<String>,        hybridButtonListeners: List<View.OnClickListener>    ) {        this.options = options        this.hybridTitle = hybridTitle        this.hybridButtonName = hybridButtonName        this.hybridRadioButtonName = hybridRadioButtonName        this.hybridCheckBoxName = hybridCheckBoxName        this.hybridButtonListeners = hybridButtonListeners    }    constructor(        options: Options,        twoPairInputTitle: String,        twoPairInputItem1: String,        twoPairInputItem2: String,        twoPairInputItem3: String    ) {        this.options = options        when (options) {            Options.TWO_PAIR_INPUT -> {                this.twoPairInputTitle = twoPairInputTitle                this.twoPairInputItem1 = twoPairInputItem1                this.twoPairInputItem2 = twoPairInputItem2                this.twoPairInputItem3 = twoPairInputItem3            }            Options.FOUR_DISPLAY -> {                this.fourDisplayTitle = twoPairInputTitle                this.fourDisplayContent1 = twoPairInputItem1                this.fourDisplayContent2 = twoPairInputItem2                this.fourDisplayContent3 = twoPairInputItem3            }            Options.TWO_COLUMN_DISPLAY -> {                this.twoColumnDisplayTitle1 = twoPairInputTitle                this.twoColumnDisplayContent1 = twoPairInputItem1                this.twoColumnDisplayTitle2 = twoPairInputItem2                this.twoColumnDisplayContent2 = twoPairInputItem3            }            Options.DEMAND_ITEM->{                this.demandItemTitle=twoPairInputTitle                this.demandItemProjectMode=twoPairInputItem1                this.demandItemProjectAddress=twoPairInputItem2                this.demandItemProjectMore = twoPairInputItem3            }            Options.REGISTRATION_ITEM->{                this.registrationItemType=twoPairInputTitle                this.registrationItemNumber=twoPairInputItem1                this.registrationItemInformation1=twoPairInputItem2                this.registrationItemInformation2=twoPairInputItem3            }        }    }    constructor(        options: Options,        twoPairInputItem1: String,        twoPairInputItem2: String,        twoPairInputItem3: String,        title1: String, title2: String    ) {        this.options = options        when(options){            Options.TEXT_SCOLLVIEW->{                this.textDetails = twoPairInputItem1                this.textMore = twoPairInputItem2                this.textDelete = twoPairInputItem3                this.expandTitle = title1                this.expandContent = title2            }            Options.FIVE_DISPLAY->{                this.fiveDisplayTitle = twoPairInputItem1                this.fiveDisplayContent1 = twoPairInputItem2                this.fiveDisplayContent2 = twoPairInputItem3                this.fiveDisplayContent3 = title1                this.fiveDisplayContent4 = title2            }            Options.STORE->{                this.storeImage = twoPairInputItem1                this.storeName = twoPairInputItem2                this.storeAddress = twoPairInputItem3                this.storeMajor = title1                this.styleType = title2            }        }    }    constructor(options: Options, selectNameList1: List<String>, selectTitle1: String,selectNameList2: List<String>, selectTitle2: String) {        this.options = options        when (options) {            Options.TWO_TEXT_DIALOG -> {                this.textFirstDialog = selectTitle1                this.selectFirstDialogOption1Items = selectNameList1                this.textSecondDialog = selectTitle2                this.selectSecondDialogOption1Items = selectNameList2            }        }    }    fun resetCheckList(checkList:MutableList<Boolean>)    {        for (i in 0..checkList.size-1)        {            checkList[i]=false        }    }}